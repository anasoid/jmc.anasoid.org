(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[644],{3905:function(e,r,t){"use strict";t.d(r,{Zo:function(){return l},kt:function(){return f}});var n=t(7294);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function p(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function i(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var c=n.createContext({}),s=function(e){var r=n.useContext(c),t=r;return e&&(t="function"==typeof e?e(r):p(p({},r),e)),t},l=function(e){var r=s(e.components);return n.createElement(c.Provider,{value:r},e.children)},u={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},m=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),m=s(t),f=a,d=m["".concat(c,".").concat(f)]||m[f]||u[f]||o;return t?n.createElement(d,p(p({ref:r},l),{},{components:t})):n.createElement(d,p({ref:r},l))}));function f(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var o=t.length,p=new Array(o);p[0]=m;var i={};for(var c in r)hasOwnProperty.call(r,c)&&(i[c]=r[c]);i.originalType=e,i.mdxType="string"==typeof e?e:a,p[1]=i;for(var s=2;s<o;s++)p[s]=t[s];return n.createElement.apply(null,p)}return n.createElement.apply(null,t)}m.displayName="MDXCreateElement"},4654:function(e,r,t){"use strict";t.r(r),t.d(r,{frontMatter:function(){return i},metadata:function(){return c},toc:function(){return s},default:function(){return u}});var n=t(2122),a=t(9756),o=(t(7294),t(3905)),p=["components"],i={sidebar_position:50},c={unversionedId:"users/Interceptor",id:"users/Interceptor",isDocsHomePage:!1,title:"Interceptor",description:"org.anasoid.jmc.core.application.interceptors.PrepareInterceptor can change Wrappers tree before generating final JMX.",source:"@site/docs/users/Interceptor.md",sourceDirName:"users",slug:"/users/Interceptor",permalink:"/docs/users/Interceptor",editUrl:"https://github.com/anasoid/jmc.anasoid.org/edit/master/website/docs/users/Interceptor.md",version:"current",sidebarPosition:50,frontMatter:{sidebar_position:50},sidebar:"users",previous:{title:"Template",permalink:"/docs/users/template"},next:{title:"Functions",permalink:"/docs/users/function"}},s=[{value:"Example",id:"example",children:[]}],l={toc:s};function u(e){var r=e.components,t=(0,a.Z)(e,p);return(0,o.kt)("wrapper",(0,n.Z)({},l,t,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"org.anasoid.jmc.core.application.interceptors.",(0,o.kt)("strong",{parentName:"p"},"PrepareInterceptor")," can change Wrappers tree before generating final JMX."),(0,o.kt)("h2",{id:"example"},"Example"),(0,o.kt)("p",null,'Add a default wait for each sampler having a tag "wait"'),(0,o.kt)("p",null,"Ex"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},'public class WaitInterceptor implements PrepareInterceptor {\n\n  @Override\n  public boolean support(TestElementWrapper<?> testElementWrapper) {\n    return testElementWrapper.getTags().contains("wait"))\n        && testElementWrapper instanceof HTTPSamplerProxyWrapper;\n  }\n\n  @Override\n  public void prepare(TestElementWrapper<?> testElementWrapper) {\n    HTTPSamplerProxyWrapper sampler = (HTTPSamplerProxyWrapper) testElementWrapper;\n\n    sampler.getChildren().add(\n        UniformRandomTimerWrapper.builder()\n            .withName("Wait default")\n            .withDelay(0)\n            .withRandom(20)\n            .build());\n  }\n}\n\n')),(0,o.kt)("p",null,"ApplicationTest accept a list of Interceptors."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"\n    ApplicationTest applicationTest = new ApplicationTest(new HelloTestPlan().generate(),\n        Arrays.asList(new WaitInterceptor()));\n")))}u.isMDXComponent=!0}}]);